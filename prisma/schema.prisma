// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("users")
}

model Vehicle {
  id          Int       @id @default(autoincrement())
  name        String
  description String    @db.Text
  dailyPrice  Decimal   @map("daily_price") @db.Decimal(10, 2)
  category    String
  status      String    @default("available")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  images      Image[]
  reservations Reservation[]
  unavailablePeriods UnavailablePeriod[]

  @@map("vehicles")
}

model Image {
  id        Int      @id @default(autoincrement())
  vehicleId Int      @map("vehicle_id")
  path      String
  isPrimary Boolean  @default(false) @map("is_primary")
  createdAt DateTime @default(now()) @map("created_at")
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)

  @@map("vehicle_images")
}

model Reservation {
  id          Int      @id @default(autoincrement())
  vehicleId   Int      @map("vehicle_id")
  clientName  String   @map("client_name")
  clientEmail String   @map("client_email")
  clientPhone String   @map("client_phone")
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  status      String   @default("pending")
  message     String?  @db.Text
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  vehicle     Vehicle  @relation(fields: [vehicleId], references: [id])

  @@map("reservations")
}

model UnavailablePeriod {
  id        Int      @id @default(autoincrement())
  vehicleId Int      @map("vehicle_id")
  startDate DateTime @map("start_date")
  endDate   DateTime @map("end_date")
  reason    String
  createdAt DateTime @default(now()) @map("created_at")
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)

  @@map("vehicle_unavailability")
}

model Testimonial {
  id         Int      @id @default(autoincrement())
  clientName String   @map("client_name")
  rating     Int
  comment    String   @db.Text
  isVisible  Boolean  @default(true) @map("is_visible")
  createdAt  DateTime @default(now()) @map("created_at")

  @@map("testimonials")
}

model FAQ {
  id         Int      @id @default(autoincrement())
  question   String   @db.Text
  answer     String   @db.Text
  orderIndex Int      @default(0) @map("order_index")
  isVisible  Boolean  @default(true) @map("is_visible")
  createdAt  DateTime @default(now()) @map("created_at")

  @@map("faq")
}
